project_name: drone-cache
before:
  hooks:
    - make clean
    - make vendor
dist: target/dist
builds:
-
  goos:
    - darwin
    - linux
    - windows
    # github.com/mattn/go-ieproxy vendor/github.com/mattn/go-ieproxy/GetProxyFunc.go:10:9: undefined: proxyMiddleman
    # - openbsd
    # - freebsd
    # - netbsd
    # - dragonfly
  goarch:
    - 386
    - amd64
    - arm
    - arm64
  goarm:
    - 6
    - 7
  ignore:
    - goos: darwin
      goarch: 386
  env:
    - CGO_ENABLED=0
  flags:
    -tags netgo
  ldflags: >
    -s
    -w
    -X main.Version={{.Version}}
    -X main.Commit={{.ShortCommit}}
    -X main.Date={{.Date}}
  hooks:
    # Ignores failures, this is just best effort. Alternative: find target/dist -name drone-cache -type f -exec upx {} +
    post: find target/dist -name drone-cache -type f -print0 | xargs -n 1 -0 upx
archives:
  -
    id: tarball
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    wrap_in_directory: true
    replacements:
      # https://en.wikipedia.org/wiki/Uname
      # uname -m compatible.
      amd64: x86_64
      386: i386
      # uname -s compatible.
      darwin: Darwin
      linux: Linux
      windows: Windows
      openbsd: OpenBSD
      netbsd: NetBSD
      freebsd: FreeBSD
      dragonfly: DragonFly
    files:
      - README.md
      - CHANGELOG.md
      - LICENSE
checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt" # default
snapshot:
  name_template: "{{ .Tag }}-SNAPSHOT-{{.ShortCommit}}" # default
release:
  github:
    owner: meltwater
    name: drone-cache
  prerelease: auto # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
changelog:
  sort: asc
  filters:
    exclude:
    - typo
    - '^docs:'
    - '^test:'
    - Merge pull request
    - Merge branch
dockers:
  -
    image_templates:
    - "meltwater/drone-cache:{{ .Tag }}-linux-amd64"
    - "meltwater/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-amd64"
    - "meltwater/drone-cache:v{{ .Major }}-linux-amd64"

    # TODO: Add missing GOOS and ARCH
    # .Os	GOOS (usually allow replacements)
    # .Arch	GOARCH (usually allow replacements)
    # .Arm	GOARM (usually allow replacements)
    # .Mips	GOMIPS (usually allow replacements)
    # TODO: Add github docker repo
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:{{ .Tag }}-linux-amd64"
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-amd64"
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:v{{ .Major }}-linux-amd64"

    # Skips the docker push. Could be useful if you also do draft releases.
    # If set to auto, the release will not be pushed to the docker repository
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Defaults to false. It's auto as an additional safety measure.
    skip_push: auto
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
    - "--platform=linux/amd64"
    - "--label=org.label-schema.schema-version=1.0"
    - "--label=version={{.Version}}"
    - "--label=org.label-schema.name={{.ProjectName}}"
    - "--label=org.label-schema.version={{.Version}}"
    - "--label=org.label-schema.build-date={{.Date}}"
    - "--label=org.label-schema.vcs-ref={{.FullCommit}}"
    - "--label=org.label-schema.docker.dockerfile=Dockerfile"
    - "--label=org.opencontainers.image.name={{.ProjectName}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  -
    image_templates:
    - "meltwater/drone-cache:{{ .Tag }}-linux-arm64"
    - "meltwater/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-arm64"
    - "meltwater/drone-cache:v{{ .Major }}-linux-arm64"

    # TODO: Add missing GOOS and ARCH
    # .Os	GOOS (usually allow replacements)
    # .Arch	GOARCH (usually allow replacements)
    # .Arm	GOARM (usually allow replacements)
    # .Mips	GOMIPS (usually allow replacements)
    # TODO: Add github docker repo
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:{{ .Tag }}-linux-arm64"
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-arm64"
    # - "docker.pkg.github.com/meltwater/drone-cache/drone-cache:v{{ .Major }}-linux-arm64"

    # Skips the docker push. Could be useful if you also do draft releases.
    # If set to auto, the release will not be pushed to the docker repository
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Defaults to false. It's auto as an additional safety measure.
    skip_push: auto
    dockerfile: Dockerfile
    use: buildx
    goarch: arm64
    build_flag_templates:
    - "--platform=linux/arm64"
    - "--label=org.label-schema.schema-version=1.0"
    - "--label=version={{.Version}}"
    - "--label=org.label-schema.name={{.ProjectName}}"
    - "--label=org.label-schema.version={{.Version}}"
    - "--label=org.label-schema.build-date={{.Date}}"
    - "--label=org.label-schema.vcs-ref={{.FullCommit}}"
    - "--label=org.label-schema.docker.dockerfile=Dockerfile"
    - "--label=org.opencontainers.image.name={{.ProjectName}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"

docker_manifests:
- name_template: 'meltwater/drone-cache:{{ .Tag }}'
  image_templates:
  - 'meltwater/drone-cache:{{ .Tag }}-linux-amd64'
  - 'meltwater/drone-cache:{{ .Tag }}-linux-arm64'
- name_template: 'meltwater/drone-cache:latest'
  image_templates:
  - 'meltwater/drone-cache:{{ .Tag }}-linux-amd64'
  - 'meltwater/drone-cache:{{ .Tag }}-linux-arm64'
- name_template: 'meltwater/drone-cache:v{{ .Major }}.{{ .Minor }}'
  image_templates:
  - 'meltwater/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-amd64'
  - 'meltwater/drone-cache:v{{ .Major }}.{{ .Minor }}-linux-arm64'
- name_template: 'meltwater/drone-cache:v{{ .Major }}'
  image_templates:
  - 'meltwater/drone-cache:v{{ .Major }}-linux-amd64'
  - 'meltwater/drone-cache:v{{ .Major }}-linux-arm64'
