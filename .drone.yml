---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

clone:
  depth: 50

steps:
  #   This is needed for the tags. And the tags are needed to determine version.
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags

  - name: configure-buckets
    image: minio/mc:RELEASE.2020-10-03T02-54-56Z
    commands:
      - sleep 5
      - mc config host add minio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - mc mb --region=eu-west-1 minio/drone-cache-bucket
      - mc admin user add minio foo barbarbar
      - "echo '{\"Version\": \"2012-10-17\", \"Statement\": [ { \"Action\": [ \"s3:GetObject\", \"s3:PutObject\", \"s3:DeleteObject\", \"s3:CreateBucket\", \"s3:DeleteBucket\" ], \"Effect\": \"Allow\", \"Resource\": [ \"arn:aws:s3:::s3-round-trip-with-role/*\", \"arn:aws:s3:::s3-round-trip-with-role\" ], \"Sid\": \"\" } ] }' >> /tmp/policy.json"
      - mc admin policy add minio userpolicy /tmp/policy.json
      - mc admin policy set minio userpolicy user=foo

  - name: build
    image: golang:1.18.4
    commands:
      - make drone-cache
    environment:
      CGO_ENABLED: 0

  - name: lint
    image: docker.io/golangci/golangci-lint:v1.46.2
    commands:
      - make lint
    environment:
      CGO_ENABLED: 0

  - name: test
    image: golang:1.18.4
    commands:
      - go test -mod=vendor -short -cover -tags=integration ./...
    environment:
      CGO_ENABLED: 0
      TEST_S3_ENDPOINT: minio:9000
      TEST_GCS_ENDPOINT: http://fakegcs:4443/storage/v1/
      TEST_STORAGE_EMULATOR_HOST: fakegcs:4443
      TEST_SFTP_HOST: sftp
      TEST_AZURITE_URL: azurite:10000
    volumes:
      - name: testdata
        path: /drone/src/tmp/testdata/cache

  - name: rebuild-cache
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      bucket: drone-cache-bucket
      mount:
        - vendor
      rebuild: true
      region: eu-west-1
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: rebuild-cache-with-key
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      bucket: drone-cache-bucket
      cache_key: "{{ .Repo.Name }}_{{ checksum \"go.mod\" }}_{{ checksum \"go.sum\" }}_{{ arch }}_{{ os }}"
      mount:
        - vendor
      rebuild: true
      region: eu-west-1
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: rebuild-cache-with-gzip
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: gzip
      bucket: drone-cache-bucket
      cache_key: gzip
      mount:
        - vendor
      rebuild: true
      region: eu-west-1
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: rebuild-cache-with-zstd
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: zstd
      bucket: drone-cache-bucket
      cache_key: zstd
      mount:
        - vendor
      rebuild: true
      region: eu-west-1
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: rebuild-cache-with-filesystem
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: gzip
      backend: filesystem
      cache_key: volume
      mount:
        - vendor
      rebuild: true
      exit_code: true
    volumes:
      - name: cache
        path: /tmp/cache

  - name: restore-cache-with-key
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      bucket: drone-cache-bucket
      cache_key: "{{ .Repo.Name }}_{{ checksum \"go.mod\" }}_{{ checksum \"go.sum\" }}_{{ arch }}_{{ os }}"
      mount:
        - vendor
      region: eu-west-1
      pull: always
      restore: true
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: restore-cache-with-gzip
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: gzip
      bucket: drone-cache-bucket
      cache_key: gzip
      mount:
        - vendor
      region: eu-west-1
      restore: true
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: restore-cache-with-zstd
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: zstd
      bucket: drone-cache-bucket
      cache_key: zstd
      mount:
        - vendor
      region: eu-west-1
      restore: true
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      archive_format: gzip
      backend: filesystem
      cache_key: volume
      mount:
        - vendor
      restore: true
      exit_code: true
    volumes:
      - name: cache
        path: /tmp/cache

  - name: restore-cache-debug
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      debug: true
      restore: true
      pull: always

  - name: restore-cache
    image: meltwater/drone-cache:v1.2.2
    pull: always
    settings:
      bucket: drone-cache-bucket
      mount:
        - vendor
      region: eu-west-1
      restore: true
      path_style: true
      endpoint: minio:9000
      exit_code: true
    environment:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

services:
  - name: minio
    image: minio/minio:RELEASE.2022-07-15T03-44-22Z
    commands:
      - minio server /data
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_REGION: eu-west-1
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    ports:
      - 9000
  - name: fakegcs
    image: fsouza/fake-gcs-server:1.38.3
    ports:
      - 4443
    commands:
      - fake-gcs-server -public-host fakegcs -scheme http
  - name: sftp
    image: atmoz/sftp:alpine
    ports:
      - 22
    commands:
      - /entrypoint foo:pass:::sftp_test bar:pass:::plugin_test
  - name: azurite
    image: mcr.microsoft.com/azure-storage/azurite:3.18.0
    commands:
      - azurite-blob --blobHost 0.0.0.0
    ports:
      - 10000

volumes:
  - name: cache
    temp: {}
  - name: testdata
    temp: {}

trigger:
  branch:
    - master
  event:
    - push
    - pull_request

...
