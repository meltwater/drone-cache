kind: pipeline
name: default

clone:
  depth: true
  tags: true

branches:
  - master

steps:
  - name: restore-cache
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      restore: true
      bucket: drone-cache-bucket
      settings:
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: restore-cache-with-key
    image: meltwater/drone-cache:dev
    settings:
      pull: true
      restore: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "go.mod" }}_{{ checksum "go.sum" }}_{{ arch }}_{{ os }}'
      bucket: drone-cache-bucket
      settings:
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: restore-cache-with-gzip
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      restore: true
      cache_key: "gzip"
      archive_format: "gzip"
      bucket: drone-cache-bucket
      settings:
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - 'vendor'
      volumes:
        - '/drone/tmp/cache:/tmp/cache'

  - name: restore-cache-debug
    image: meltwater/drone-cache:dev
    settings:
      pull: true
      restore: true
      debug: true

  - name: build
    image: golang:1.11-alpine
    pull: true
    commands:
      - apk add --update make git
      - make drone-cache

  - name: test
    image: golang:1.11-alpine
    pull: true
    environment:
      CGO_ENABLED: '0'
      TEST_ENDPOINT: filestorage:9000
    commands:
      - go test -v -mod=vendor -cover ./... # NOTICE: -race: Needs CGO enabled
    volumes:
      - '/drone/tmp/testcache:/drone/src/github.com/meltwater/drone-cache/testcache/cache'

  - name: analyze
    image: golang:1.11-alpine
    pull: true
    environment:
      CGO_ENABLED: '0'
    commands:
      - wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s v1.14.0
      - ./bin/golangci-lint run -v --enable-all -D gochecknoglobals

  - name: rebuild-cache
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      rebuild: true
      bucket: drone-cache-bucket
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: rebuild-cache-with-key
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      rebuild: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "go.mod" }}_{{ checksum "go.sum" }}_{{ arch }}_{{ os }}'
      bucket: drone-cache-bucket
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: rebuild-cache-with-gzip
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      rebuild: true
      cache_key: "gzip"
      archive_format: "gzip"
      bucket: drone-cache-bucket
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      region: eu-west-1
      mount:
        - 'vendor'

  - name: rebuild-cache-with-filesystem
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - 'vendor'
      volumes:
        - '/drone/tmp/cache:/tmp/cache'

  - name: docker-release-tag
    image: plugins/docker
    settings:
      repo: meltwater/drone-cache
      tags: '${DRONE_TAG}'
      auto_tag: true
      docker_username:
        from_secret: docker_username
      docker_password:
        from_secret: docker_password
    when:
      event: tag
      status: success
      ref: refs/tags/*

  - name: github-release-tag
    image: golang:1.11 # golang:1.11-alpine
    environment:
      github_token:
        from_secret: github_token
    commands:
      - git status
      - curl -sL https://git.io/goreleaser | bash
      - git status
    when:
      event: tag
      status: success
      ref: refs/tags/*

services:
  - name: filestorage
    image: minio/minio:RELEASE.2018-10-06T00-15-16Z
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      MINIO_REGION: eu-west-1
    ports:
      - 9000:9000
    command: server /data
